import Head from "next/head";
import Image from "next/image";
import { Button, message } from "antd";
import { MdGroupAdd, MdOutlineShare } from "react-icons/md";
import { ReactComponent as TwitterIcon } from "../../images/profile/tw.svg";
import telegramLogo from "../../images/profile/telegram-logo.png";
import ProfileMain from "@/components/profile/ProfileMain";
import Container from "@/components/layouts/Container";
import WalletNumber from "@/components/utils/WalletNumber";
import axios from "axios";
import { useRouter } from "next/router";
import { useSelector } from "react-redux";
import profilePlaceholder from "../../images/avatar.png";
import { useFollowUserMutation } from "@/redux/features/api/apiSlice";

export default function Profile(data) {
  const router = useRouter();
  const root = useSelector((state) => state.main.root);
  const [followUser] = useFollowUserMutation();
  const { userId } = router.query;
  // console.log(data);

  return (
    <>
      <Head>
        <title>{data.user.name || "Profile"} | Radish Square</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Container>
        <main>
          <section>
            {/*  eslint-disable-next-line @next/next/no-img-element */}
            <img
              src={data.user.profileBanner}
              className="w-full h-[360px] object-cover"
              alt="banner"
            />

            {/* Profile Card */}
            <div className="relative -mt-16 xl:px-20 px-4 md:px-6 md:flex justify-between max-w-[1800px] mx-auto">
              <div>
                <div className="flex justify-start">
                  <div className="w-[112px] h-[112px] rounded-full border-4 border-white border-solid flex justify-center items-center">
                    <Image
                      src={data.user.profilePicture || profilePlaceholder}
                      className="rounded-full"
                      alt="profile"
                      width={108}
                      height={108}
                    />
                  </div>
                </div>

                <h2 className="font-extrabold text-[40px] mt-2">
                  {data.user.name || "Guest User"}
                </h2>

                <div className="flex items-center gap-x-2 mt-3">
                  <div className="text-sm font-extrabold -mt-[2px]">
                    Wallet address:
                  </div>
                  <div>
                    {true ? (
                      <WalletNumber
                        style="text-sm text-primary font-semibold !m-0 !p-0"
                        walletNumber={data.user.primaryWallet}
                      />
                    ) : (
                      <p className="text-sm text-[#94999D]">
                        No wallet connected
                      </p>
                    )}
                  </div>
                </div>

                <div className="max-w-[508px] text-[#94999D] mt-3">
                  {data.user.bio || "No bio"}
                </div>

                <div className="flex items-center gap-x-8  my-6">
                  <div className="text-center">
                    <p className="font-extrabold text-xl">
                      {data.user.followers.length}
                    </p>
                    <p className="mt-1 text-sm text-secondaryGray">followers</p>
                  </div>

                  <div className="text-center">
                    <p className="font-extrabold text-xl">
                      {data.ownedNfts.length}
                    </p>
                    <p className="mt-1 text-sm text-secondaryGray">items</p>
                  </div>

                  <div className="text-center">
                    <p className="font-extrabold text-xl">
                      {data.user.following.length}
                    </p>
                    <p className="mt-1 text-sm text-secondaryGray">following</p>
                  </div>
                </div>

                <div className="flex items-center gap-x-2 mt-4">
                  {router.query.userId === root.user?.uuid ? (
                    <Button
                      className="w-[120px] h-[46px] rounded-[12px] font-bold"
                      type="primary"
                      onClick={() => {
                        router.push("/my-account/" + router.query.userId);
                      }}
                    >
                      Edit Profile
                    </Button>
                  ) : (
                    <Button
                      className="w-[120px] h-[46px] rounded-[12px] font-bold"
                      type="primary"
                      onClick={async () => {
                        if (!root.user)
                          return message.error("Please login first");

                        if (data.user.followers.includes(root.user?._id)) {
                          return message.info("Already following");
                        }

                        message.loading({
                          content: "please wait...",
                          key: "follow",
                        });

                        try {
                          followUser({
                            followingUserId: router.query.userId,
                          }).then((res) => {
                            if (res.data?.success) {
                              // emit socket event
                              root.socket.emit(
                                "save-new-individual-notification",
                                {
                                  for: router.query.userId,
                                  type: "user",
                                  referenceUser: root.user?._id,
                                  message: {
                                    text: `User, started following you`,
                                    link: `/profile/${root.user?.uuid}`,
                                  },
                                }
                              );

                              message.success({
                                content: res.data.message,
                                key: "follow",
                              });

                              // refetch data
                              router.replace(router.asPath);
                            } else {
                              message.error({
                                content: res.data?.message,
                                key: "follow",
                              });
                            }
                          });
                        } catch (error) {
                          message.error({
                            content: "Something went wrong",
                            key: "follow",
                          });
                        }
                      }}
                    >
                      <div className="flex justify-center items-center gap-1.5">
                        <MdGroupAdd className="w-[20px] h-[20px]" />
                        {data.user.followers.includes(root.user?._id)
                          ? "Following"
                          : "Follow"}
                      </div>
                    </Button>
                  )}

                  <Button
                    className="h-[46px] w-[46px] rounded-full flex justify-center items-center"
                    onClick={() => {
                      // copy to clipboard
                      navigator.clipboard.writeText(
                        `${process.env.NEXT_PUBLIC_BASE_URL}/profile/${router.query.userId}`
                      );
                      message.success("Link copied to clipboard");
                    }}
                  >
                    <MdOutlineShare className="" />
                  </Button>
                </div>
              </div>

              {data.user?.telegram || data.user?.twitter ? (
                <div className="md:mt-28 mt-6">
                  <p className="font-extrabold text-sm">
                    Find us on social media
                  </p>

                  <div className="my-4 flex items-center gap-x-1">
                    {data.user?.telegram && (
                      <Image
                        src={telegramLogo}
                        className="cursor-pointer"
                        width={18}
                        height={18}
                        alt="telegram"
                        onClick={() => {
                          window.open(data.user?.telegram, "_blank");
                        }}
                      />
                    )}
                    {data.user?.twitter && (
                      <TwitterIcon
                        className="ml-3 cursor-pointer"
                        onClick={() => {
                          window.open(data.user?.twitter, "_blank");
                        }}
                      />
                    )}
                  </div>
                </div>
              ) : null}
            </div>
          </section>

          <section className="xl:px-20 px-4 md:px-6 md:my-10 my-8 max-w-[1800px] mx-auto">
            <ProfileMain data={data} />
          </section>
        </main>
      </Container>
    </>
  );
}

export async function getServerSideProps(context) {
  // console.log(context.query.userId);

  try {
    const response = await axios.get(
      `${process.env.API_BASE_URL}/api/user/profile/${context.query.userId}`
    );

    // console.log(response.data);

    return {
      props: {
        user: response.data.user,
        ownedNfts: response.data.ownedNfts,
        onSaleNfts: response.data.onSaleNfts,
      },
    };
  } catch (error) {
    console.log(error);
    return {
      notFound: true,
    };
  }
}
